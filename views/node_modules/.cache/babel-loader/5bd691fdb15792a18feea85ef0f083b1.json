{"remainingRequest":"/home/kurro/work/great-thing-start-from-small-beginning/views/node_modules/babel-loader/lib/index.js!/home/kurro/work/great-thing-start-from-small-beginning/views/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kurro/work/great-thing-start-from-small-beginning/views/src/components/product/ProductForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/kurro/work/great-thing-start-from-small-beginning/views/src/components/product/ProductForm.vue","mtime":1539443025657},{"path":"/home/kurro/work/great-thing-start-from-small-beginning/views/node_modules/cache-loader/dist/cjs.js","mtime":1530623306618},{"path":"/home/kurro/work/great-thing-start-from-small-beginning/views/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/kurro/work/great-thing-start-from-small-beginning/views/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ERROR_MSG } from '../../store/mutation-types';\nexport default {\n  props: ['model', 'isEditing'],\n  methods: {\n    handleFileUpload() {\n      this.model.file = this.$refs.file.files[0];\n    },\n\n    saveProduct() {\n      this.$validator.validateAll().then(() => {\n        this.$emit('save-product', this.model);\n      }).catch(() => {\n        this.$store.commit(ERROR_MSG, {\n          type: 'error',\n          title: 'Validation!',\n          content: 'Please ensure the form is valid.'\n        });\n      });\n    }\n\n  }\n};",{"version":3,"sources":["ProductForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,SACA,SADA,QAEA,4BAFA;AAIA,eAAA;AACA,SAAA,CAAA,OAAA,EAAA,WAAA,CADA;AAEA,WAAA;AACA,uBAAA;AACA,WAAA,KAAA,CAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,KAHA;;AAIA,kBAAA;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,MAAA;AACA,aAAA,KAAA,CAAA,cAAA,EAAA,KAAA,KAAA;AACA,OAFA,EAEA,KAFA,CAEA,MAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAAA;AACA,gBAAA,OADA;AAEA,iBAAA,aAFA;AAGA,mBAAA;AAHA,SAAA;AAKA,OARA;AASA;;AAdA;AAFA,CAAA","sourcesContent":["<template>\n    <form @submit.prevent=\"saveProduct\">\n        <div class=\"col-lg-5 col-md-5 col-sm-12 col-xs-12\">\n            <div class=\"form-group\">\n                <label>Name</label>\n                <input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        v-model=\"model.name\"\n                        v-validate=\"'required'\"\n                        name=\"name\"\n                        :class=\"{'form-control': true, 'error': errors.has('name') }\"/>\n                <span class=\"small text-danger\" v-show=\"errors.has('name')\">Name is required</span>\n            </div>\n            <div class=\"form-group\">\n                <label>Price</label>\n                <input\n                        type=\"number\"\n                        class=\"form-control\"\n                        placeholder=\"Price\"\n                        v-model=\"model.price\"\n                        v-validate=\"'required'\"\n                        name=\"price\"\n                        :class=\"{'form-control': true, 'error': errors.has('price') }\"/>\n                <span class=\"small text-danger\" v-show=\"errors.has('price')\">Price is required</span>\n            </div>\n        </div>\n\n        <div class=\"col-lg-4 col-md-4 col-sm-12 col-xs-12\">\n            <div class=\"form-group\">\n                <label>Image</label>\n                <input\n                        type=\"text\"\n                        lass=\"form-control\"\n                        placeholder=\"Image\"\n                        v-model=\"model.image\"\n                        name=\"image\"\n                        :class=\"{'form-control': true, 'error': errors.has('image') }\"/>\n                <span class=\"small text-danger\"\n                      v-show=\"errors.has('image')\">Image is required and must be a valid URL</span>\n            </div>\n\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"form-group\">\n                    <label>Image File</label>\n                    <input\n                            type=\"file\"\n                            class=\"form-control\"\n                            placeholder=\"Image\"\n                            ref=\"file\"\n                            v-on:change=\"handleFileUpload()\"\n                            :class=\"{'form-control': true, 'error': errors.has('image') }\"/>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label>Description</label>\n                <textarea\n                        type=\"number\"\n                        class=\"form-control\"\n                        placeholder=\"Description\"\n                        rows=\"5\"\n                        v-model=\"model.description\"\n                        v-validate=\"'required'\"\n                        name=\"description\"\n                        :class=\"{'form-control': true, 'error': errors.has('description') }\"></textarea>\n                <span class=\"small text-danger\" v-show=\"errors.has('description')\">Description is required</span>\n            </div>\n            <div class=\"form-group new-button\">\n                <button class=\"button\">\n                    <i class=\"fa fa-pencil\"></i>\n                    <span v-if=\"isEditing\">Update Product</span>\n                    <span v-else>Add Product</span>\n                </button>\n            </div>\n        </div>\n    </form>\n</template>\n\n<script>\n    import {\n        ERROR_MSG\n    } from '../../store/mutation-types'\n\n    export default {\n        props: ['model', 'isEditing'],\n        methods: {\n            handleFileUpload() {\n                this.model.file = this.$refs.file.files[0];\n            },\n            saveProduct() {\n                this.$validator.validateAll().then(() => {\n                    this.$emit('save-product', this.model)\n                }).catch(() => {\n                    this.$store.commit(ERROR_MSG, {\n                        type: 'error',\n                        title: 'Validation!',\n                        content: 'Please ensure the form is valid.'\n                    })\n                })\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"src/components/product"}]}